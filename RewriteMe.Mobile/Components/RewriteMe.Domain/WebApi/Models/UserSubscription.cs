// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace RewriteMe.Domain.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserSubscription
    {
        /// <summary>
        /// Initializes a new instance of the UserSubscription class.
        /// </summary>
        public UserSubscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserSubscription class.
        /// </summary>
        public UserSubscription(System.Guid id, System.Guid userId, string timeString, System.DateTime dateCreated)
        {
            Id = id;
            UserId = userId;
            TimeString = timeString;
            DateCreated = dateCreated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public System.Guid UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeString")]
        public string TimeString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateCreated")]
        public System.DateTime DateCreated { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TimeString == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TimeString");
            }
            if (TimeString != null)
            {
                if (TimeString.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "TimeString", 50);
                }
            }
        }
    }
}
