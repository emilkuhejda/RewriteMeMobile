// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace RewriteMe.Domain.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RegistrationDeviceModel
    {
        /// <summary>
        /// Initializes a new instance of the RegistrationDeviceModel class.
        /// </summary>
        public RegistrationDeviceModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegistrationDeviceModel class.
        /// </summary>
        public RegistrationDeviceModel(System.Guid installationId, string runtimePlatform, string installedVersionNumber, string language)
        {
            InstallationId = installationId;
            RuntimePlatform = runtimePlatform;
            InstalledVersionNumber = installedVersionNumber;
            Language = language;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "installationId")]
        public System.Guid InstallationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "runtimePlatform")]
        public string RuntimePlatform { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "installedVersionNumber")]
        public string InstalledVersionNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RuntimePlatform == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RuntimePlatform");
            }
            if (InstalledVersionNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InstalledVersionNumber");
            }
            if (Language == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Language");
            }
        }
    }
}
